[tool.poetry]
name = "contxt-sdk"
version = "6.0.0"
description = "Contxt SDK from ndustrial"
authors = ["ndustrial <dev@ndustrial.io>"]
license = "ISC"
readme = "README.md"
repository = "https://github.com/ndustrialio/contxt-sdk-python"
packages = [ { include = "contxt" } ]

[tool.poetry.dependencies]
python = "^3.7"
auth0-python = "^3"
click = ">=7,<9"
cryptography = { version = ">=1.4", optional = true } # enable pyjwt to en/decode jwt via RSA
pyjwt = "^2"
pyyaml = ">=5,<7"
requests = "^2"
tabulate = "*"
sgqlc = ">=15,<17"

[tool.poetry.dev-dependencies]
black = "^22.10.0"
flake8 = "^5"
isort = "^5"
mkdocs = "^1.2.4"
mkdocs-click = "^0.8.0"
mypy = "^0"
poethepoet = "^0"
pre-commit = "^2"
pytest = "^7"
types-click = "^7.1.8"
types-jwt = "^0.1.3"
types-pkg-resources = "^0.1.3"
types-pyyaml = "^6.0.12"
types-requests = "^2.28.11"
types-tabulate = "^0.9.0.0"

[tool.poetry.extras]
crypto = ["cryptography"]

[tool.poetry.scripts]
contxt = "contxt.__main__:cli"

[tool.poe.tasks]
clean = { cmd = "rm -rf .mypy_cache/ .pytest_cache/ build/ dist/ *.egg-info", help = "Remove build artifacts" }
docs = { cmd = "mkdocs serve", help = "Serve documentation site" }
lint = { cmd = "pre-commit run --all-files", help = "Run linters and formatters" }
test = { cmd = "pytest tests", help = "Run tests" }

[tool.black]
line-length = 105

[tool.isort]
line_length = 105
profile = "black"

[build-system]
requires = ["poetry-core>=1.0"]
build-backend = "poetry.core.masonry.api"
